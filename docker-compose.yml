version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: src/app/DistributedFileStorage.ConsoleApp/Dockerfile
    depends_on:
        postgres:
            condition: service_healthy
        azurite:
            condition: service_started
    environment:
      # PostgreSQL Metadata
      POSTGRES_METADATA_CONNECTION: "Host=postgres;Port=5432;Database=metadata_db;Username=postgres;Password=pass"

      # PostgreSQL Chunk
      POSTGRES_CHUNK_CONNECTION: "Host=postgres;Port=5432;Database=chunk_db;Username=postgres;Password=pass"

      # Azure Blob via Azurite
      AZURE_CONNECTION: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1;"
      AZURE_CONTAINER: "chunks"

    ports:
      - "8080:80"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-postgres:/docker-entrypoint-initdb.d
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 10

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
    volumes:
      - azurite_data:/data
    command: "azurite-blob --blobHost 0.0.0.0 --skipApiVersionCheck"

volumes:
  pgdata:
  azurite_data:
